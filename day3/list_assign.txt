# Module 3: Data Structures Assignments
## Lesson 3.1: Lists
### Assignment 1: Creating and Accessing Lists

Create a list of the first 20 positive integers. Print the list.

### Assignment 2: Accessing List Elements

Print the first, middle, and last elements of the list created in Assignment 1.

### Assignment 3: List Slicing

Print the first five elements, the last five elements, and the elements from index 5 to 15 of the list created in Assignment 1.

### Assignment 4: List Comprehensions

Create a new list containing the squares of the first 10 positive integers using a list comprehension. Print the new list.

### Assignment 5: Filtering Lists

Create a new list containing only the even numbers from the list created in Assignment 1 using a list comprehension. Print the new list.

### Assignment 6: List Methods

Create a list of random numbers and sort it in ascending and descending order. Remove the duplicates from the list and print the modified list.

### Assignment 7: Nested Lists

Create a nested list representing a 3x3 matrix and print the matrix. Access and print the element at the second row and third column.

### Assignment 8: List of Dictionaries

Create a list of dictionaries where each dictionary represents a student with keys 'name' and 'score'. Sort the list of dictionaries by the 'score' in descending order and print the sorted list.

### Assignment 9: Matrix Transposition

Write a function that takes a 3x3 matrix (nested list) as input and returns its transpose. Print the original and transposed matrices.

### Assignment 10: Flattening a Nested List

Write a function that takes a nested list and flattens it into a single list. Print the original and flattened lists.

### Assignment 11: List Manipulation

Create a list of the first 10 positive integers. Remove the elements at indices 2, 4, and 6, and insert the element '99' at index 5. Print the modified list.

### Assignment 12: List Zipping

Create two lists of the same length. Use the `zip` function to combine these lists into a list of tuples and print the result.

### Assignment 13: List Reversal

Write a function that takes a list and returns a new list with the elements in reverse order. Print the original and reversed lists.

### Assignment 14: List Rotation

Write a function that rotates a list by n positions. Print the original and rotated lists.

### Assignment 15: List Intersection

Write a function that takes two lists and returns a new list containing only the elements that are present in both lists. Print the intersected list.
